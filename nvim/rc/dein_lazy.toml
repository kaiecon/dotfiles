# originalrepo = on github

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# on_i = 1
# on_event = "InsertCharPre"
# hook_source = """
#   let g:deoplete#enable_at_startup = 1
#   let g:deoplete#auto_complete_delay = 0
#   let g:deoplete#auto_complete_start_length = 1
#   let g:deoplete#enable_camel_case = 0
#   let g:deoplete#enable_ignore_case = 0
#   let g:deoplete#enable_refresh_always = 0
#   let g:deoplete#enable_smart_case = 1
#   let g:deoplete#file#enable_buffer_path = 1
#   let g:deoplete#max_list = 10000
#   set completeopt-=preview
#   let g:deoplete#enable_at_startup = 1
#
#   inoremap <expr><tab> pumvisible() ? "\<C-n>" :
#   \ neosnippet#expandable_or_jumpable() ?
#   \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
#   inoremap <expr><BS>
#   \ deoplete#smart_close_popup()."\<C-h>"
#   inoremap <expr><C-g>     deoplete#undo_completion()
# """
#
# [[plugins]]
# repo = 'Shougo/neosnippet.vim'
# on_i = 1
# hook_source = '''
# let g:neosnippet#snippets_directory = '~/.vim/snippets'
# " " imap <C-k>     <Plug>(neosnippet_expand_or_jump)
# " " smap <C-k>     <Plug>(neosnippet_expand_or_jump)
# " " xmap <C-k> <Plug>(neosnippet_expand_target)
# imap <expr><CR> neosnippet#expandable()
#            \ ? "<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "<C-y>" : "<CR>"
# imap <expr><TAB> pumvisible() ? "<C-n>" : neosnippet#jumpable()
#            \ ? "<Plug>(neosnippet_expand_or_jump)" : "<TAB>"
# imap <expr><S-TAB> pumvisible() ? "<C-p>" : neosnippet#jumpable()
#            \ ? "<Plug>(neosnippet_expand_or_jump)" : "<S-TAB>"
# smap <expr><TAB> neosnippet#jumpable() ?
#            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
#
# if has('conceal')
#   set conceallevel=2 concealcursor=niv
# endif
# '''

[[plugins]]
repo = 'roxma/nvim-yarp'
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_source = ['deoplete.nvim']

# [[plugins]]
# repo = 'davidhalter/jedi-vim'
# on_ft = 'python'
# hook_add = '''
#   let g:jedi#rename_command = "C-R"
# '''

# [[plugins]]
# repo = 'justmao945/vim-clang'
# on_ft = ['c', 'cpp']
# hook_add = '''
#   let g:clang_c_options = '-std=c11'
#   let g:clang_cpp_options = '-std=c++14 -stdlib=libc++'
#   let g:clang_format_auto = 1
#   let g:clang_format_style = 'Google'
#   let g:clang_check_syntax_auto = 1
#   nnoremap <leader>cf :<C-u>ClangFormat<CR>
# '''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'
hook_add = '''
  let g:user_emmet_expandabbr_key = '<c-e>'
  let g:user_emmet_settings = {
    \  'variables': { 
    \  'lang' : 'ja'
    \  },
    \ }
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['md', 'markdown']
hook_add = '''
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_conceal_code_blocks = 0
'''

[[plugins]]
repo = 'suan/vim-instant-markdown'
on_ft = ['md', 'markdown']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_add = '''
let g:vimtex_compiler_latexmk = {
      \ 'background': 1,
      \ 'build_dir': '',
      \ 'continuous': 1,
      \ 'options': [
      \    '-pdfdvi', 
      \    '-verbose',
      \    '-file-line-error',
      \    '-synctex=1',
      \    '-interaction=nonstopmode',
      \],
      \}
let g:vimtex_view_general_viewer
      \ = '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'
'''

# [[plugins]]
# repo = 'zchee/deoplete-clang'
# hook_source = '''
# let g:deoplete#sources#clang#libclang_path = '/usr/local/Cellar/llvm/HEAD-848dcbd/lib/libclang.dylib'
# let g:deoplete#sources#clang#clang_header = '/usr/local/Cellar/llvm/HEAD-848dcbd/lib/clang'
# '''
# on_ft = ['c', 'cpp', 'cmake']

[[plugins]]
repo = 'jalvesaq/Nvim-R'
on_ft = ['R']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']
